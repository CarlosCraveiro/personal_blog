# Workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages usin Nix

  # I modified the Hugo default github pages workflow to use nix as the package manager instead of Hugo alone
  # The code for nix I took from https://github.com/zebreus/nix-website-example/tree/master
  # Hugo default workflow https://gohugo.io/hosting-and-deployment/hosting-on-github/

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps: 
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v21
        with:
          nix_conf: experimental-features = nix-command flakes
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
          # If your target isn't the default package choose another like #.pages
      - name: Build site with Nix
        run: nix build --print-build-logs
      - name: Adjust permissions
        run: |
          chown -R `id -u`:`id -g` ./result
          chmod -R a+rwx ./result 
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./result

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
